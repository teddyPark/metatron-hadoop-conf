<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<configuration>
    <property>
      <name>hadoop.http.cross-origin.allowed-origins</name>
      <value>*</value>
    </property>
     
    <property>
      <name>hadoop.registry.dns.bind-address</name>
      <value>0.0.0.0</value>
    </property>
     
    <property>
      <name>hadoop.registry.dns.bind-port</name>
      <value>53</value>
      <hidden>true</hidden>
    </property>
     
    <property>
      <name>hadoop.registry.dns.domain-name</name>
      <value>EXAMPLE.COM</value>
    </property>
     
    <property>
      <name>hadoop.registry.dns.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>hadoop.registry.dns.zone-mask</name>
      <value>255.255.255.0</value>
    </property>
     
    <property>
      <name>hadoop.registry.dns.zone-subnet</name>
      <value>172.17.0.0</value>
    </property>
     
    <property>
      <name>hadoop.registry.zk.quorum</name>
      <value>datanode1.metatron-dev:2181,datanode2.metatron-dev:2181,datanode3.metatron-dev:2181,datanode4.metatron-dev:2181,datanode5.metatron-dev:2181</value>
    </property>
     
    <property>
      <name>manage.include.files</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.acl.enable</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.admin.acl</name>
      <value>activity_analyzer,yarn</value>
    </property>
     
    <property>
      <name>yarn.application.classpath</name>
     <value>$HADOOP_CONF_DIR,/usr/local/hadoop/*,/usr/local/hadoop/lib/*,/usr/local/hadoop/share/hadoop/common/*,/usr/local/hadoop/share/hadoop/common/lib/*,/usr/local/hadoop/share/hadoop/yarn/*/usr/local/hadoop/share/hadoop/yarn/lib/*,/usr/local/hadoop/share/hadoop/hdfs/*,/usr/local/hadoop/share/hadoop/hdfs/lib/*,/usr/local/hadoop/share/hadoop/client/*,/usr/local/hadoop/share/hadoop/client/lib/*</value>
    </property>
     
    <property>
      <name>yarn.client.nodemanager-connect.max-wait-ms</name>
      <value>60000</value>
    </property>
     
    <property>
      <name>yarn.client.nodemanager-connect.retry-interval-ms</name>
      <value>10000</value>
    </property>
     
    <property>
      <name>yarn.http.policy</name>
      <value>HTTP_ONLY</value>
    </property>
     
    <property>
      <name>yarn.log-aggregation-enable</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.log-aggregation.retain-seconds</name>
      <value>2592000</value>
    </property>
     
    <property>
      <name>yarn.log.server.url</name>
      <value>http://master2.metatron-dev:19888/jobhistory/logs</value>
    </property>
     
    <property>
      <name>yarn.log.server.web-service.url</name>
      <value>http://master2.metatron-dev:8188/ws/v1/applicationhistory</value>
    </property>
     
    <property>
      <name>yarn.node-labels.enabled</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.node-labels.fs-store.retry-policy-spec</name>
      <value>2000, 500</value>
    </property>
     
    <property>
      <name>yarn.node-labels.fs-store.root-dir</name>
      <value>/system/yarn/node-labels</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.address</name>
      <value>0.0.0.0:45454</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.admin-env</name>
      <value>MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.aux-services</name>
      <!--value>mapreduce_shuffle,spark2_shuffle,timeline_collector</value-->
      <value>mapreduce_shuffle,timeline_collector</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.aux-services.mapreduce_shuffle.class</name>
      <value>org.apache.hadoop.mapred.ShuffleHandler</value>
    </property>
    <property>
      <name>yarn.nodemanager.aux-services.spark2_shuffle.class</name>
      <value>org.apache.spark.network.yarn.YarnShuffleService</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.aux-services.spark2_shuffle.classpath</name>
      <value>/usr/local/hadoop/spark2/aux/*</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.aux-services.spark_shuffle.class</name>
      <value>org.apache.spark.network.yarn.YarnShuffleService</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.aux-services.spark_shuffle.classpath</name>
      <value>/usr/local/hadoop/spark/aux/*</value>
    </property>
    <property>
      <name>yarn.nodemanager.aux-services.timeline_collector.class</name>
      <value>org.apache.hadoop.yarn.server.timelineservice.collector.PerNodeTimelineCollectorsAuxService</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.bind-host</name>
      <value>0.0.0.0</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.container-executor.class</name>
      <value>org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.container-metrics.unregister-delay-ms</name>
      <value>60000</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.container-monitor.interval-ms</name>
      <value>3000</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.delete.debug-delay-sec</name>
      <value>0</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage</name>
      <value>90</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb</name>
      <value>1000</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.disk-health-checker.min-healthy-disks</name>
      <value>0.25</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.health-checker.interval-ms</name>
      <value>135000</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.health-checker.script.timeout-ms</name>
      <value>60000</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.linux-container-executor.group</name>
      <value>hadoop</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.local-dirs</name>
      <value>/hadoop/yarn/local</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.log-aggregation.compression-type</name>
      <value>gz</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.log-aggregation.debug-enabled</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.log-aggregation.num-log-files-per-app</name>
      <value>30</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds</name>
      <value>3600</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.log-dirs</name>
      <value>/hadoop/yarn/log</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.log.retain-seconds</name>
      <value>604800</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.pmem-check-enabled</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.recovery.dir</name>
      <value>/var/log/hadoop-yarn/nodemanager/recovery-state</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.recovery.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.recovery.supervised</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.remote-app-log-dir</name>
      <value>/app-logs</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.remote-app-log-dir-suffix</name>
      <value>logs</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource-plugins</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource-plugins.gpu.docker-plugin</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidiadocker-v1.endpoint</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource-plugins.gpu.path-to-discovery-executables</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource.cpu-vcores</name>
      <value>4</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource.memory-mb</name>
      <value>42052</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resource.percentage-physical-cpu-limit</name>
      <value>80</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.resourcemanager.connect.wait.secs</name>
      <value>1800</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.runtime.linux.allowed-runtimes</name>
      <value>default,docker</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.runtime.linux.docker.allowed-container-networks</name>
      <value>host,none,bridge</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.runtime.linux.docker.capabilities</name>
      <value>
      CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,
      SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.runtime.linux.docker.default-container-network</name>
      <value>host</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.runtime.linux.docker.privileged-containers.acl</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.vmem-check-enabled</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.vmem-pmem-ratio</name>
      <value>4</value>
    </property>
     
    <property>
      <name>yarn.nodemanager.webapp.cross-origin.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.address</name>
      <value>master2.metatron-dev:8050</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.admin.address</name>
      <value>master2.metatron-dev:8141</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.am.max-attempts</name>
      <value>2</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.bind-host</name>
      <value>0.0.0.0</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.connect.max-wait.ms</name>
      <value>900000</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.connect.retry-interval.ms</name>
      <value>30000</value>
    </property>
     
    <property>
      <name>yarn.webapp.filter-entity-list-by-user</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.fs.state-store.retry-policy-spec</name>
      <value>2000, 500</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.fs.state-store.uri</name>
      <value> </value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.ha.enabled</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.hostname</name>
      <value>master2.metatron-dev</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.monitor.capacity.preemption.monitoring_interval</name>
      <value>15000</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor</name>
      <value>1</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round</name>
      <value>0.5</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.nodes.exclude-path</name>
      <value>/etc/hadoop/conf/yarn.exclude</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.placement-constraints.handler</name>
      <value>scheduler</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.recovery.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.resource-tracker.address</name>
      <value>master2.metatron-dev:8025</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.scheduler.address</name>
      <value>master2.metatron-dev:8030</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.scheduler.class</name>
      <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.scheduler.monitor.enable</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.state-store.max-completed-applications</name>
      <value>${yarn.resourcemanager.max-completed-applications}</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.store.class</name>
      <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size</name>
      <value>10</value>
    </property>
     
    <property>
      <name>yarn.system-metrics-publisher.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.webapp.address</name>
      <value>master2.metatron-dev:8088</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.webapp.cross-origin.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.webapp.https.address</name>
      <value>master2.metatron-dev:8090</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.work-preserving-recovery.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms</name>
      <value>10000</value>
    </property>
     
    <property>
      <name>hadoop.zk.acl</name>
      <value>world:anyone:rwcda</value>
    </property>
     
    <property>
      <name>hadoop.zk.address</name>
      <value>datanode1.metatron-dev:2181,datanode2.metatron-dev:2181,datanode3.metatron-dev:2181,datanode4.metatron-dev:2181,datanode5.metatron-dev:2181</value>
    </property>
     
    <property>
      <name>hadoop.zk.num-retries</name>
      <value>1000</value>
    </property>
     
    <property>
      <name>hadoop.zk.retry-interval-ms</name>
      <value>1000</value>
    </property>
     
    <property>
      <name>yarn.resourcemanager.zk-state-store.parent-path</name>
      <value>/rmstore</value>
    </property>
     
    <property>
      <name>hadoop.zk.timeout-ms</name>
      <value>10000</value>
    </property>
     
    <property>
      <name>yarn.rm.system-metricspublisher.emit-container-events</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.scheduler.maximum-allocation-mb</name>
      <value>8192</value>
    </property>
     
    <property>
      <name>yarn.scheduler.maximum-allocation-vcores</name>
      <value>16</value>
    </property>
     
    <property>
      <name>yarn.scheduler.minimum-allocation-mb</name>
      <value>1024</value>
    </property>
     
    <property>
      <name>yarn.scheduler.minimum-allocation-vcores</name>
      <value>1</value>
    </property>
     
<!--    <property>
      <name>yarn.service.framework.path</name>
      <value>/hdp/apps/${hdp.version}/yarn/service-dep.tar.gz</value>
    </property> -->
     
    <property>
      <name>yarn.service.system-service.dir</name>
      <value>/services</value>
    </property>
     
    <property>
      <name>yarn.system-metricspublisher.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.address</name>
      <value>master2.metatron-dev:10200</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.bind-host</name>
      <value>0.0.0.0</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.client.max-retries</name>
      <value>30</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.client.retry-interval-ms</name>
      <value>1000</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.active-dir</name>
      <value>/ats/active/</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.app-cache-size</name>
      <value>10</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds</name>
      <value>3600</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.done-dir</name>
      <value>/ats/done/</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes</name>
      <value>org.apache.hadoop.yarn.applications.distributedshell.DistributedShellTimelinePlugin</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath</name>
      <value></value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.retain-seconds</name>
      <value>604800</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.scan-interval-seconds</name>
      <value>60</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.entity-group-fs-store.summary-store</name>
      <value>org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.generic-application-history.save-non-am-container-meta-info</name>
      <value>false</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.generic-application-history.store-class</name>
      <value>org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.hbase-schema.prefix</name>
      <value>prod.</value>
    </property>

    <property>
      <name>yarn.timeline-service.hbase.configuration.file</name>
      <value>file:///etc/hbase/conf/hbase-site.xml</value>
    </property>

    <property>
      <name>yarn.timeline-service.hbase.coprocessor.jar.hdfs.location</name>
      <value>/atsv2/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.http-authentication.proxyuser.root.groups</name>
      <value>*</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.http-authentication.proxyuser.root.hosts</name>
      <value>*</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.http-authentication.simple.anonymous.allowed</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.http-authentication.type</name>
      <value>simple</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.http-cross-origin.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.leveldb-state-store.path</name>
      <value>/hadoop/yarn/timeline</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.leveldb-timeline-store.path</name>
      <value>/hadoop/yarn/timeline</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.leveldb-timeline-store.read-cache-size</name>
      <value>104857600</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size</name>
      <value>10000</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size</name>
      <value>10000</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms</name>
      <value>300000</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.reader.webapp.address</name>
      <value>master2.metatron-dev:8198</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.reader.webapp.https.address</name>
      <value>master2.metatron-dev:8199</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.recovery.enabled</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.state-store-class</name>
      <value>org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.store-class</name>
      <value>org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.ttl-enable</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.ttl-ms</name>
      <value>2678400000</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.version</name>
      <value>2.0f</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.versions</name>
      <value>1.5f,2.0f</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.webapp.address</name>
      <value>master2.metatron-dev:8188</value>
    </property>
     
    <property>
      <name>yarn.timeline-service.webapp.https.address</name>
      <value>master2.metatron-dev:8190</value>
    </property>
     
    <property>
      <name>yarn.webapp.api-service.enable</name>
      <value>true</value>
    </property>
     
    <property>
      <name>yarn.webapp.ui2.enable</name>
      <value>true</value>
    </property>
</configuration>
